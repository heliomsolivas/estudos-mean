{
  "name": "consign",
  "description": "Autoload your scripts.",
  "version": "0.1.2",
  "author": {
    "name": "Jarrad Seers",
    "email": "jarrad@seers.me"
  },
  "contributors": [],
  "main": "index",
  "keywords": [
    "mvc",
    "autoload",
    "koa",
    "express",
    "express-load",
    "auto-configure",
    "configuration",
    "consign",
    "load",
    "require"
  ],
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jarradseers/consign"
  },
  "devDependencies": {
    "middleware-chain": "^1.0.1",
    "mocha": "^1.21.4"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "# Consign\n\n[![Build Status](https://travis-ci.org/jarradseers/consign.svg?branch=develop)](https://travis-ci.org/jarradseers/consign)\n\n  Autoload your scripts! _the successor to `express-load`_\n\n  Consign makes applications easier to develop with logical file separation and automatic script loading.\n\n  Consign can be used to autoload models, routes, schemas, configs, controllers, object maps... etc...\n\n## Usage\n\n```js\nvar consign = require('consign');\n\nconsign()\n  .include('models')\n  .then('controllers')\n  .into(app);\n\n// app.models.user\n// app.models.company\n// app.controllers.user\n// app.controllers.company\n```\n\nCheck out the [examples](examples) or [test folder](test) for more!\n\n## Installation\n\n```bash\n$ npm install consign\n```\n\n## Features\n\n  * Autoload scripts\n  * Supports order, includes and excludes\n  * Made to supplement frameworks or scripts\n  * Makes MVC applications easier to work with\n  * Test driven\n  * Fast, Light-weight with no external dependencies\n  * Highly configurable\n\n## Options\n\n  The optional options object is passed in as a parameter to the main `consign` function.\n\n#### Defaults\n  ```js\n    consign({\n      cwd: process.cwd(),\n      locale: 'en-us',\n      logger: console,\n      verbose: true,\n      extensions: [ '.js', '.json', '.node' ],\n      loggingType: 'info'\n    })\n  ```\n\n### Logging\n\n  `logger` - Defaults to console, this can be switched out.\n  `verbose` - On by default, set to `false` for no logging\n  `loggingType` - Set the type of logging, defaults to `info`\n\n### Locale\n\nCurrent supported locale (for logging output):\n\n  - en-au\n  - en-nz\n  - en-us\n  - fr-fr\n  - pt-br\n  - pl\n  - zh-cn\n\n### Base Directory (cwd)\n\n  Consign will simply use a relative path from your current working directory, however sometimes you don't want heavily nested files included in the object chain, so you can set the cwd:\n\n  ```js\n  consign()\n    .include('app') // ./app/controllers/user.js\n    .into(app);\n  ```\n\n  would result in:\n\n  ```js\n  app.app.controllers.user\n  ```\n\n  so using the `cwd` option:\n\n  ```js\n  consign({cwd: 'app'})\n    .include('app') // ./app/controllers/user.js\n    .into(app);\n  ```\n  would give us:\n\n  ```js\n  app.controllers.user\n  ```\n\n### File Extensions\n\n  Defaults to an array containing `.js`, .`json` and `.node`, new ones are concatenated instead of replaced.\n\n## Tests\n\n  To run the test suite, first install the dependencies, then run `npm test`:\n\n  ```bash\n  $ npm install\n  $ npm test\n  ```\n\n## License\n\n  [MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jarradseers/consign/issues"
  },
  "_id": "consign@0.1.2",
  "dist": {
    "shasum": "eab9eb32bde19f7de3aa4e97d708680a7fc6902d"
  },
  "_from": "consign@0.1.2",
  "_resolved": "https://registry.npmjs.org/consign/-/consign-0.1.2.tgz"
}
